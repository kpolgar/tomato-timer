{"ast":null,"code":"var _jsxFileName = \"/Users/makosguba/Desktop/tomato_timer/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Setter from './components/Setter/Setter';\nimport Timer from './components/Timer/Timer';\nimport Controls from './components/Controls/Controls';\nimport Sound from './components/Sound/Sound';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleSound = () => {\n      this.setState({\n        toggleSound: !this.state.sound\n      });\n    };\n\n    this.bIncrement = () => {\n      if (this.state.breakCount < 60) {\n        this.setState({\n          breakCount: this.state.breakCount + 1\n        });\n      }\n    };\n\n    this.bDecrement = () => {\n      if (this.state.breakCount > 0) {\n        this.setState({\n          breakCount: this.state.breakCount - 1\n        });\n      }\n    };\n\n    this.sIncrement = () => {\n      if (this.state.sessionCount < 60) {\n        this.setState({\n          sessionCount: this.state.sessionCount + 1\n        });\n      }\n    };\n\n    this.sDecrement = () => {\n      if (this.state.sessionCount > 0) {\n        this.setState({\n          sessionCount: this.state.sessionCount - 1\n        });\n      }\n    };\n\n    this.state = {\n      breakCount: 5,\n      sessionCount: 25,\n      cycle: 'Session',\n      sound: true\n    };\n  }\n\n  // countDown = () => {\n  //   // if (this.state.sessionCount !== 0) {\n  //   //   startTime = new Date().getTime();\n  //   //   tInterval = setInterval(getShowTime, 1);\n  //   // }\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Pomodoro Clock\"), React.createElement(Setter, {\n      breakCount: this.state.breakCount,\n      sessionCount: this.state.sessionCount,\n      bIncrement: this.bIncrement,\n      bDecrement: this.bDecrement,\n      sIncrement: this.sIncrement,\n      sDecrement: this.sDecrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      breakCount: this.state.breakCount,\n      sessionCount: this.state.sessionCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Controls, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Sound, {\n      sound: this.state.sound,\n      toggleSound: this.state.toggleSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/makosguba/Desktop/tomato_timer/src/App.js"],"names":["React","Component","Setter","Timer","Controls","Sound","App","constructor","props","toggleSound","setState","state","sound","bIncrement","breakCount","bDecrement","sIncrement","sessionCount","sDecrement","cycle","render"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport './App.css';\nimport Setter from './components/Setter/Setter';\nimport Timer from './components/Timer/Timer';\nimport Controls from './components/Controls/Controls';\nimport Sound from './components/Sound/Sound';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        breakCount: 5,\n        sessionCount: 25,\n        cycle: 'Session',\n        sound: true,\n    }\n}\n    \n    toggleSound = () => {\n      this.setState({\n        toggleSound: !this.state.sound\n      })\n    }\n\n    //I think this will play the sound\n    // setSound = (sound) => {\n    //   this.setState({\n    //     sound: sound\n    //   })\n    // };\n\n    bIncrement = ()  => {\n        if (this.state.breakCount < 60) {\n            this.setState({\n                breakCount: this.state.breakCount + 1\n              });\n        }\n        \n      };\n      \n    bDecrement = () => {\n        if (this.state.breakCount > 0) {\n            this.setState({\n                breakCount: this.state.breakCount - 1\n            });\n        }\n      };\n    \n    \n    sIncrement = () => {\n        if (this.state.sessionCount < 60) {\n            this.setState({\n                sessionCount: this.state.sessionCount + 1\n            });\n        } \n    };\n          \n    sDecrement = () => {\n        if (this.state.sessionCount > 0) {\n            this.setState({\n                sessionCount: this.state.sessionCount - 1\n            });\n        }\n    };\n\n    // countDown = () => {\n    //   // if (this.state.sessionCount !== 0) {\n    //   //   startTime = new Date().getTime();\n    //   //   tInterval = setInterval(getShowTime, 1);\n    //   // }\n    // }\n  render() {\n    return (\n      <div className=\"container_div\">\n        <h1>Pomodoro Clock</h1>\n        <Setter \n          breakCount={this.state.breakCount}\n          sessionCount={this.state.sessionCount}\n          bIncrement={this.bIncrement}\n          bDecrement={this.bDecrement}\n          sIncrement={this.sIncrement}\n          sDecrement={this.sDecrement}\n        />\n        <Timer \n          breakCount={this.state.breakCount}\n          sessionCount={this.state.sessionCount}\n        />\n        <Controls />\n        <Sound \n          sound={this.state.sound}\n          toggleSound={this.state.toggleSound}\n        />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}