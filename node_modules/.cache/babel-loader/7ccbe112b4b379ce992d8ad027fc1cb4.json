{"ast":null,"code":"var _jsxFileName = \"/Users/makosguba/Desktop/tomato_timer/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Setter from './components/Setter/Setter';\nimport Timer from './components/Timer/Timer';\nimport Controls from './components/Controls/Controls';\nimport Sound from './components/Sound/Sound';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setSound = sound => {\n      this.setState({\n        sound: sound\n      });\n    };\n\n    this.bIncrement = () => {\n      if (this.state.breakCount < 60) {\n        this.setState({\n          breakCount: this.state.breakCount + 1\n        });\n      }\n    };\n\n    this.bDecrement = () => {\n      if (this.state.breakCount > 0) {\n        this.setState({\n          breakCount: this.state.breakCount - 1\n        });\n      }\n    };\n\n    this.sIncrement = () => {\n      if (this.state.sessionCount < 60) {\n        this.setState({\n          sessionCount: this.state.sessionCount + 1\n        });\n      }\n    };\n\n    this.sDecrement = () => {\n      if (this.state.sessionCount > 0) {\n        this.setState({\n          sessionCount: this.state.sessionCount - 1\n        });\n      }\n    };\n\n    this.countDown = () => {\n      if (this.state.sessionCount !== 0) {\n        startTime = new Date().getTime();\n        tInterval = setInterval(getShowTime, 1);\n      }\n    };\n\n    this.state = {\n      breakCount: 5,\n      sessionCount: 25,\n      cycle: 'Session',\n      sound: 'on'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container_div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Pomodoro Clock\"), React.createElement(Setter, {\n      breakCount: this.state.breakCount,\n      sessionCount: this.state.sessionCount,\n      bIncrement: this.bIncrement,\n      bDecrement: this.bDecrement,\n      sIncrement: this.sIncrement,\n      sDecrement: this.sDecrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      breakCount: this.state.breakCount,\n      sessionCount: this.state.sessionCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Controls, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Sound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/makosguba/Desktop/tomato_timer/src/App.js"],"names":["React","Component","Setter","Timer","Controls","Sound","App","constructor","props","setSound","sound","setState","bIncrement","state","breakCount","bDecrement","sIncrement","sessionCount","sDecrement","countDown","startTime","Date","getTime","tInterval","setInterval","getShowTime","cycle","render"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport './App.css';\nimport Setter from './components/Setter/Setter';\nimport Timer from './components/Timer/Timer';\nimport Controls from './components/Controls/Controls';\nimport Sound from './components/Sound/Sound';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        breakCount: 5,\n        sessionCount: 25,\n        cycle: 'Session',\n        sound: 'on'\n    }\n}\n    \n    setSound = (sound) => {\n      this.setState({\n        sound: sound\n      })\n    };\n\n    bIncrement = ()  => {\n        if (this.state.breakCount < 60) {\n            this.setState({\n                breakCount: this.state.breakCount + 1\n              });\n        }\n        \n      };\n      \n    bDecrement = () => {\n        if (this.state.breakCount > 0) {\n            this.setState({\n                breakCount: this.state.breakCount - 1\n            });\n        }\n      };\n    \n    \n    sIncrement = () => {\n        if (this.state.sessionCount < 60) {\n            this.setState({\n                sessionCount: this.state.sessionCount + 1\n            });\n        } \n    };\n          \n    sDecrement = () => {\n        if (this.state.sessionCount > 0) {\n            this.setState({\n                sessionCount: this.state.sessionCount - 1\n            });\n        }\n    };\n\n    countDown = () => {\n      if (this.state.sessionCount !== 0) {\n        startTime = new Date().getTime();\n        tInterval = setInterval(getShowTime, 1);\n      }\n    }\n  render() {\n    return (\n      <div className=\"container_div\">\n        <h1>Pomodoro Clock</h1>\n        <Setter \n          breakCount={this.state.breakCount}\n          sessionCount={this.state.sessionCount}\n          bIncrement={this.bIncrement}\n          bDecrement={this.bDecrement}\n          sIncrement={this.sIncrement}\n          sDecrement={this.sDecrement}\n        />\n        <Timer \n          breakCount={this.state.breakCount}\n          sessionCount={this.state.sessionCount}\n        />\n        <Controls />\n        <Sound />\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}